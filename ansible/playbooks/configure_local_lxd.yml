---
- name: Configure local LXD to interact with remote cluster
  hosts: localhost
  become: yes
  connection: local
  vars:
    lxd_cluster_password: "{{ hostvars['pi']['lxd_cluster_password'] }}"
    bootstrap_address: "{{ hostvars['pi']['bootstrap_address'] }}"
    ansible_user: "{{ hostvars['pi']['ansible_user'] }}"

  tasks:
    - name: Ensure Snapd is installed
      package:
        name: snapd
        state: present
      when: ansible_os_family in ["Debian", "RedHat"]

    - name: Enable and start Snapd service (RedHat/CentOS/Fedora)
      systemd:
        name: snapd
        state: started
        enabled: yes
      when: ansible_os_family == "RedHat"

    - name: Create symbolic link for Snap (RedHat/CentOS/Fedora)
      file:
        src: /var/lib/snapd/snap
        dest: /snap
        state: link
        force: yes
      when: ansible_os_family == "RedHat"

    - name: Enable and start Snapd socket (Debian/Ubuntu)
      systemd:
        name: snapd.socket
        state: started
        enabled: yes
      when: ansible_os_family == "Debian"

    - name: Ensure Snap's bin directory is in the PATH for all users
      lineinfile:
        path: /etc/profile.d/snap.sh
        line: 'export PATH=$PATH:/snap/bin'
        create: yes
        state: present

    - name: Ensure Snap's bin directory is in the current shell PATH
      shell: '. /etc/profile.d/snap.sh'

    - name: Install Snap core if not already installed
      shell: snap install core

    - name: Install LXD
      snap:
        name: lxd
        state: present

    - name: Copy cluster certificate from bootstrap node to local machine
      local_action:
        module: command
        cmd: >
          scp {{ ansible_user }}@{{ bootstrap_address }}:/var/snap/lxd/common/lxd/cluster.crt /tmp/bootstrap_cluster.crt
      ignore_errors: yes
      register: scp_result

    - name: Fail if cluster certificate is not found
      fail:
        msg: "Cluster certificate not found on the bootstrap node. Ensure the LXD cluster is initialized correctly."
      when: scp_result.failed

    - name: Add remote cluster to local LXD
      shell: |
        echo "{{ lookup('file', '/tmp/bootstrap_cluster.crt') }}" | lxc remote add my-cluster {{ bootstrap_address }} --accept-certificate --password={{ lxd_cluster_password }}
      environment:
        LXD_CLUSTER_PASSWORD: "{{ lxd_cluster_password }}"
      args:
        executable: /bin/bash








